generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model contact_me_button {
  label   String @db.VarChar(30)
  tooltip String @db.VarChar(100)

  @@id([label, tooltip])
}

model icon {
  name         String         @id @db.VarChar(20)
  icon_alt_id  Int
  icon_alt     icon_alt       @relation(fields: [icon_alt_id], references: [id], onUpdate: NoAction)
  icon_tooltip icon_tooltip[]
  project_icon project_icon[]
}

model icon_alt {
  id   Int    @id @default(autoincrement())
  text String @db.VarChar(100)
  icon icon[]
}

model icon_tooltip {
  name    String @db.VarChar(20)
  tooltip String @db.VarChar(150)
  icon    icon   @relation(fields: [name], references: [name], onDelete: Cascade)

  @@id([name, tooltip])
}

model job {
  title          String           @id @db.VarChar(50)
  project_detail project_detail[]
  user_job       user_job[]
}

model location {
  id           Int     @id @default(autoincrement())
  city         String  @db.VarChar(50)
  state_abbr   String  @db.VarChar(2)
  state_full   String  @db.VarChar(50)
  country_abbr String  @db.VarChar(5)
  country_full String  @db.VarChar(50)
  users        users[]
}

model project {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(50)
  url              String             @db.VarChar(300)
  current_project  Boolean
  display_order    Int                @db.SmallInt
  project_links_id Int
  project_link     project_link       @relation(fields: [project_links_id], references: [id], onUpdate: NoAction)
  project_detail   project_detail[]
  project_icon     project_icon[]
  project_metadata project_metadata[]
  user_project     user_project[]
}

model project_detail {
  id         Int     @id @default(autoincrement())
  title      String  @db.VarChar(100)
  job_title  String  @db.VarChar(50)
  summary    String
  img_alt    String
  project_id Int
  job        job     @relation(fields: [job_title], references: [title])
  project    project @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model project_icon {
  project_id Int
  icon_name  String  @db.VarChar(20)
  icon       icon    @relation(fields: [icon_name], references: [name], onDelete: Cascade)
  project    project @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([project_id, icon_name])
}

model project_link {
  id      Int       @id @default(autoincrement())
  tooltip String    @db.VarChar(100)
  label   String    @db.VarChar(100)
  project project[]
}

model project_metadata {
  id          Int     @id @default(autoincrement())
  title       String  @db.VarChar(100)
  description String  @db.VarChar(200)
  keywords    String  @db.VarChar(200)
  project_id  Int
  project     project @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user_bio {
  type            String      @db.VarChar(20)
  text            String
  user_details_id Int
  user_detail     user_detail @relation(fields: [user_details_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([type, text])
}

model user_detail {
  id        Int        @id @default(autoincrement())
  summary   String
  image_alt String?    @db.VarChar(100)
  user_id   Int
  user_bio  user_bio[]
  users     users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user_job {
  user_id   Int
  job_title String @db.VarChar(50)
  job       job    @relation(fields: [job_title], references: [title])
  users     users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, job_title])
}

model user_project {
  user_id    Int
  project_id Int
  project    project @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, project_id])
}

model users {
  id           Int            @id @default(autoincrement())
  first_name   String         @db.VarChar(20)
  middle_name  String?        @db.VarChar(20)
  last_name    String         @db.VarChar(20)
  email        String         @unique @db.VarChar(50)
  phone        String         @unique @db.VarChar(25)
  location_id  Int
  user_detail  user_detail[]
  user_job     user_job[]
  user_project user_project[]
  location     location       @relation(fields: [location_id], references: [id], onUpdate: NoAction)
}
