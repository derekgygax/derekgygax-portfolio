generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model icon_alt {
  id    Int     @id @default(autoincrement())
  text  String  @db.VarChar(100)
  icons icons[]
}

model icons {
  name          String          @id @db.VarChar(20)
  tooltip       String          @db.VarChar(100)
  icon_alt_id   Int?
  icon_alt      icon_alt?       @relation(fields: [icon_alt_id], references: [id], onDelete: Restrict, onUpdate: NoAction)
  project_icons project_icons[]
}

model jobs {
  title           String            @id @db.VarChar(50)
  project_details project_details[]
  user_jobs       user_jobs[]
}

model project_details {
  id         Int      @id @default(autoincrement())
  title      String   @db.VarChar(100)
  job_title  String   @db.VarChar(50)
  summary    String
  img_alt    String
  project_id Int
  jobs       jobs     @relation(fields: [job_title], references: [title])
  projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model project_icons {
  project_id Int
  icon_name  String   @db.VarChar(20)
  icons      icons    @relation(fields: [icon_name], references: [name], onDelete: Cascade, onUpdate: NoAction)
  projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([project_id, icon_name])
}

model project_links {
  id       Int        @id @default(autoincrement())
  tooltip  String     @db.VarChar(100)
  label    String     @db.VarChar(100)
  projects projects[]
}

model project_metadata {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(100)
  description String   @db.VarChar(200)
  keywords    String   @db.VarChar(200)
  project_id  Int
  projects    projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model projects {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(50)
  url              String             @db.VarChar(300)
  current_project  Boolean
  display_order    Int                @db.SmallInt
  project_links_id Int
  project_details  project_details[]
  project_icons    project_icons[]
  project_metadata project_metadata[]
  project_links    project_links      @relation(fields: [project_links_id], references: [id], onUpdate: NoAction)
  user_projects    user_projects[]
}

model user_jobs {
  user_id   Int
  job_title String @db.VarChar(50)
  jobs      jobs   @relation(fields: [job_title], references: [title])
  users     users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, job_title])
}

model user_projects {
  user_id    Int
  project_id Int
  projects   projects @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, project_id])
}

model users {
  id            Int             @id @default(autoincrement())
  first_name    String          @db.VarChar(20)
  middle_name   String?         @db.VarChar(20)
  last_name     String          @db.VarChar(20)
  email         String          @unique @db.VarChar(50)
  phone         String          @unique @db.VarChar(25)
  user_jobs     user_jobs[]
  user_projects user_projects[]
}
